# create_vm.yml

- name: Check if VM already exists
  set_fact:
    vm_exists: "{{ vm_name in existing_vms.list_vms }}"

- name: Download base image
  get_url:
    url: "{{ base_image_url }}"
    dest: "/tmp/{{ base_image_name }}"
    checksum: "sha256:{{ base_image_sha }}"
  when: not vm_exists

- name: Copy base image to libvirt directory
  copy:
    dest: "{{ libvirt_pool_dir }}/{{ vm_name }}.qcow2"
    src: "/tmp/{{ base_image_name }}"
    force: no
    remote_src: yes
    mode: 0660
  when: not vm_exists

- name: Configure the image
  command: |
    virt-customize -a {{ libvirt_pool_dir }}/{{ vm_name }}.qcow2 \
    --hostname {{ vm_name }} \
    --root-password password:{{ vm_root_pass }} \
    --ssh-inject 'root:file:{{ ssh_key }}' \
    --uninstall cloud-init --selinux-relabel
  when: not vm_exists

- name: Define vm
  community.libvirt.virt:
    command: define
    xml: "{{ lookup('template', 'vm-template.xml.j2') }}"
  when: not vm_exists

- name: Ensure VM is started
  community.libvirt.virt:
    name: "{{ vm_name }}"
    state: running
  register: vm_start_results
  until: "vm_start_results is success"
  retries: 15
  delay: 2
  when: not vm_exists
